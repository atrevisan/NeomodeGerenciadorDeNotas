// <auto-generated />
using GerenciadorDeNotas.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GerenciadorDeNotas.Dados.Migrations
{
    [DbContext(typeof(GerenciadorDeNotasContexto))]
    partial class GerenciadorDeNotasContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GerenciadorDeNotas.Entidades.Aluno", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CidadeId");

                    b.Property<string>("EMail")
                        .HasMaxLength(50);

                    b.Property<string>("Foto")
                        .HasMaxLength(50);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefone")
                        .HasMaxLength(16);

                    b.HasKey("ID");

                    b.HasIndex("CidadeId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("GerenciadorDeNotas.Entidades.Avaliacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoId");

                    b.Property<decimal>("Nota");

                    b.HasKey("ID");

                    b.HasIndex("AlunoId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("GerenciadorDeNotas.Entidades.Cidade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("UF")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("GerenciadorDeNotas.Entidades.Aluno", b =>
                {
                    b.HasOne("GerenciadorDeNotas.Entidades.Cidade", "Cidade")
                        .WithMany("Alunos")
                        .HasForeignKey("CidadeId");
                });

            modelBuilder.Entity("GerenciadorDeNotas.Entidades.Avaliacao", b =>
                {
                    b.HasOne("GerenciadorDeNotas.Entidades.Aluno", "Aluno")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
